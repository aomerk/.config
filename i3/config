#########################################
#  _ _____                              #
# (_)___ /        __ _  __ _ _ __  ___  #
# | | |_ \ _____ / _` |/ _` | '_ \/ __| #
# | |___) |_____| (_| | (_| | |_) \__ \ #
# |_|____/       \__, |\__,_| .__/|___/ #
#                |___/      |_|         #
#                                       #
#########################################



# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
# 
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# Show the sup-mail scratchpad window, if any.
#bindsym mod4+s [title="^Sup ::"] scratchpad show


# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Hack 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend.
exec --no-startup-id xss-lock -- ~/.config/i3/lock.sh
#exec --no-startup-id xss-lock -- ~/.config/i3/lock.sh --transfer-sleep-lock

# lock screen after 10 minutes of idle
#exec --no-startup-id xautolock -locker '~/.config/i3/lock.sh' &
exec --no-startup-id xidlehook --not-when-fullscreen --not-when-audio --timer 600 '~/.config/i3/lock.sh' '' &

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Shift+Return exec vim

# kill focused window
# bindsym $mod+Shift+q kill
default_orientation vertical 
for_window [class=".*"] split toggle
bindsym $mod+shift+q split toggle kill 



# start rofi (a program launcher)
#
bindsym $mod+Shift+s exec --no-startup-id rofi -show ssh
bindsym $mod+d exec --no-startup-id "rofi -combi-modi drun,run -show combi"
bindsym $mod+comma exec --no-startup-id "keepass --auto-type"
bindsym $mod+Shift+d exec --no-startup-id rofi -show window
bindsym Mod1+Tab exec --no-startup-id rofi -show window
bindsym $mod+m exec --no-startup-id rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'
bindsym $mod+Shift+p exec --no-startup-id rofi-autorandr
bindsym $mod+Shift+o exec --no-startup-id ~/scripts/rofi-scripts/rofi-surfraw/rofi-surfraw
bindsym $mod+Shift+f exec --no-startup-id rofi -show find -modi find:~/scripts/rofi-scripts/rofi-finder/finder.sh

bindsym Print exec scrot '%Y-%m-%d-%s_screenshot_$wx$h.jpg' -e 'mv $f ~/Pictures/'
bindsym Control+Print exec gnome-screenshot -i




# rofi-bluetooth
bindsym $mod+b exec --no-startup-id rofi-bluetooth

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"
set $ws16 "16"
set $ws17 "17"
set $ws18 "18"
set $ws19 "19"
set $ws20 "20"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10
bindsym $mod+Control+1 workspace $ws11
bindsym $mod+Control+2 workspace $ws12
bindsym $mod+Control+3 workspace $ws13
bindsym $mod+Control+4 workspace $ws14
bindsym $mod+Control+5 workspace $ws15
bindsym $mod+Control+6 workspace $ws16
bindsym $mod+Control+7 workspace $ws17
bindsym $mod+Control+8 workspace $ws18
bindsym $mod+Control+9 workspace $ws19
bindsym $mod+Control+0 workspace $ws20

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+u reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)

bindsym $mod+Shift+e exec ~/.config/i3/lock.sh
# bindsym $mod+Shift+q exec i3-msg exit

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# shutdown bindsym
# bindsym $mod+Shift+s exec shutdown 0

# toggle polybar
bindsym $mod+p exec polybar-msg cmd toggle

# change to correct keyboard map
exec --no-startup-id setxkbmap -layout us

# compton
#exec --no-startup-id picom --config ~/.config/picom/picom.conf --blur-method kawase --blur-strength 10
#bindsym $mod+c exec kill $(pidof picom)
#bindsym $mod+Shift+c exec picom --config ~/.config/picom/picom.conf --blur-method kawase --blur-strength 10

# autostart 
exec --no-startup-id nextcloud
exec --no-startup-id dropbox

# change screen resolution, set wallpaper and start polybar
# exec_always --no-startup-id $HOME/.config/polybar/launch.sh
bar {
	font pango:DejaVu Sans Mono 13
	status_command i3blocks
	tray_output primary
}


# assign programs to workspaces
for_window [class="Zathura"] move to workspace $ws3
for_window [class="Nautilus"] move to workspace $ws4
for_window [class="code"] move to workspace $ws5
for_window [class="jetbrains*"] move to workspace $ws5
for_window [class="LibreOffice*"] move to workspace $ws7
for_window [class="Gimp"] move to workspace $ws8
for_window [class="Spotify"] move to workspace $ws9
for_window [class="VirtualBox Manager"] move to workspace $ws10
for_window [class="VirtualBox Machine"] move to workspace $ws10
for_window [class="discord*"] move to workspace $ws10

# floating settings
for_window [class="mpv"] floating enable
for_window [class="calculator"] floating enable
for_window [class="jetbrains toolbox"] floating enable
for_window [window_role="pop-up"] floating enable

# brightness Keybindings
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-

# Audio Keybindings
bindsym XF86AudioMute exec amixer -q set Master toggle && amixer -q set Speaker toggle && amixer -q set Headphone toggle
bindsym XF86AudioLowerVolume exec amixer sset 'Master' 5%-
bindsym XF86AudioRaiseVolume exec amixer sset 'Master' 5%+

# Media Keys
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# i3 Gaps
for_window [class="^.*"] border pixel 0
gaps inner 8
gaps outer 0
bindsym $mod+z		gaps inner current plus 5
bindsym $mod+shift+z	gaps inner current minus 5

# Only enable gaps on a workspace when there is at least one container
smart_gaps on

# rounded corners
#border_radius 5

#autostart programs on specific workspace
exec --no-startup-id i3-msg 'workspace 2; exec ranger'
exec --no-startup-id i3-msg 'workspace 2; exec neofetch'
exec --no-startup-id i3-msg 'workspace 1; exec firefox'
exec --no-startup-id i3-msg 'workspace 1; exec tusk'
exec --no-startup-id /usr/lib/kdeconnectd
exec --no-startup-id kdeconnect-indicator
